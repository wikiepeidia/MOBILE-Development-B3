name: Android CI Extended

on:
  push:
    branches: [ main, master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better versioning

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: First attempt - Install Android SDK components
        continue-on-error: true
        uses: android-actions/setup-android@v3
        with:
          packages: >-
            platform-tools
            platforms;android-34
            platforms;android-33
            build-tools;34.0.0
            build-tools;33.0.2
            cmdline-tools;latest
            ndk;25.2.9519653

      - name: Accept all licenses
        run: |
          if command -v flutter >/dev/null 2>&1; then
            flutter doctor --android-licenses --verbose || true
          fi
          
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --licenses || true
          
          if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          fi
          
          if [ -f "$ANDROID_HOME/tools/bin/sdkmanager" ]; then
            yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || true
          fi
          
          sdkmanager --update || true

      - name: Second attempt - Install Android SDK components
        uses: android-actions/setup-android@v3
        with:
          packages: >-
            platform-tools
            platforms;android-34
            platforms;android-33
            build-tools;34.0.0
            build-tools;33.0.2
            cmdline-tools;latest
            ndk;25.2.9519653

      - name: Verify Android SDK setup
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_HOME/licenses/ || echo "No licenses directory found"

      # EXTENDED: Dependency vulnerability check
      - name: Check for vulnerable dependencies
        run: ./gradlew dependencyCheckAnalyze || echo "Dependency check failed, continuing..."

      # EXTENDED: Code quality checks
      - name: Run Detekt (Static Analysis)
        run: ./gradlew detekt || echo "Detekt not configured, skipping..."

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      # EXTENDED: Gradle validation
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      # EXTENDED: Generate build number
      - name: Generate build number
        id: buildnumber
        run: |
          echo "BUILD_NUMBER=$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # EXTENDED: More comprehensive testing
      - name: Run unit tests with coverage
        run: ./gradlew testDebugUnitTest jacocoTestReport --stacktrace

      - name: Run instrumented tests (if available)
        run: ./gradlew connectedDebugAndroidTest --stacktrace || echo "No instrumented tests or emulator available"

      - name: Run lint
        run: ./gradlew lint --stacktrace

      # EXTENDED: Security checks
      - name: Run security lint checks
        run: ./gradlew lintDebug --stacktrace || echo "Security lint not configured"

      # EXTENDED: Build multiple variants
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Build release APK (unsigned)
        run: ./gradlew assembleRelease --stacktrace || echo "Release build failed, continuing with debug"

      # EXTENDED: Generate APK size report
      - name: Analyze APK size
        run: |
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "Debug APK size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
          fi
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "Release APK size: $(du -h app/build/outputs/apk/release/app-release-unsigned.apk | cut -f1)"
          fi

      # EXTENDED: Upload multiple APKs
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload release APK (if exists)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app-release-apk-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: ignore

      # EXTENDED: Upload AAB for Play Store
      - name: Build AAB (Android App Bundle)
        run: ./gradlew bundleDebug --stacktrace || echo "AAB build failed"

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app-debug-aab-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: app/build/outputs/bundle/debug/*.aab
          if-no-files-found: ignore

      # EXTENDED: Better test reporting
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: |
            **/build/test-results/**
            **/build/reports/tests/**
            **/build/reports/jacoco/**
          if-no-files-found: ignore

      - name: Upload lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml
          if-no-files-found: ignore

      # EXTENDED: Upload Detekt reports
      - name: Upload Detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports-${{ steps.buildnumber.outputs.BUILD_NUMBER }}
          path: |
            **/build/reports/detekt/**
          if-no-files-found: ignore

      # EXTENDED: Create GitHub Release on tags
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/debug/*.aab
          generate_release_notes: true
          draft: false
          body: |
            ## Build Info
            - Build Number: ${{ steps.buildnumber.outputs.BUILD_NUMBER }}
            - Build Date: ${{ steps.buildnumber.outputs.BUILD_DATE }}
            - Git SHA: ${{ steps.buildnumber.outputs.GIT_SHA }}
            
            ## Downloads
            - Debug APK: Ready for testing
            - Release APK: Unsigned version
            - AAB: For Play Store upload (if signed)

      # EXTENDED: Notify on failure
      - name: Notify build failure
        if: failure()
        run: |
          echo "Build failed! Check the logs above."
          echo "Failed at: $(date)"
          echo "Branch/Tag: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

  # EXTENDED: Separate job for dependency updates check
  dependency-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          
      - name: Check for dependency updates
        run: |
          ./gradlew dependencyUpdates
          
      - name: Upload dependency update report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates
          path: build/dependencyUpdates/report.txt
          if-no-files-found: ignore

# EXTENDED: Schedule for nightly builds
  schedule:
    - cron: '0 2 * * *'  # Run at 2 AM daily
